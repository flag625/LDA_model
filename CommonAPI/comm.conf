[logging]
log_path = E:/python/LDA_model/Log/log.log

[data_source]
path = E:/python/LDA_model/Data

[tmp]
path = E:/python/LDA_model/tmp

[result]
path = E:/python/LDA_model/Result

[grammer]
rejudge = USE - |ADVANTAGE - |Advantages are: |DETAILED DESCRIPTION - |DESCRIPTION OF DRAWING(S) -
find_tech_grammer = NOVELTY - (.*?)(\s\s\s([A-Z][A-Z][A-Z][A-Z]*\s-\s)|(Advantages are: ))(.*)
find_tech_full_grammer = NOVELTY - (.*)
find_func_grammer = USE - (.*?)ADVANTAGE - (.*?)\s\s\s[A-Z]*\s[A-Z]*(\s[A-Z]*\(S\))?\s-\s(.*)
find_func_use_grammer = USE - (.*?)\s\s\s[A-Z]*\s[A-Z]*(\s[A-Z]*\(S\))?\s-\s(.*)
find_func_adv_grammer = Advantages are: (.*)
tech_np_grammer = NP:{<DT|CD|PRP$>?<JJ|JJR|JJS>*<NN|NNS|NNP|NNPS>+<POS>?<NN|NNS|NNP|NNPS>*}
                     {<NN|NNS|NNP|NNPS>*<VBG><NN|NNS|NNP|NNPS>+}
                     {<NN|NNS|NNP|NNPS>+<JJ|JJR|JJS>+<VBG><NN|NNS|NNP|NNPS>+}
                     {<JJ|JJR|JJS>+<VBG><NN|NNS|NNP|NNPS>+}
                     {<VBN><NN|NNS|NNP|NNPS>+}
                     {<JJR|JJS>?<RB|RBR|RBS><NN|NNS|NNP|NNPS>+}
                     {<RB|RBR|RBS><JJ|JJR|JJS>+<NN|NNS|NNP|NNPS>+<JJ|JJR|JJS>+<NN|NNS|NNP|NNPS>+}
func_np_grammer =
            NP:{<VBZ|VBG><DT|CD>?<JJ|JJR|JJS>*<NN|NNS>}
               {<VBZ|VBG><DT|CD>?<JJ|JJR|JJS>*<NN|NNS>+<CC><NN|NNS>}
               {<JJ|JJR|JJS>+<NN|NNS>+}
               {<JJ|JJR|JJS>*<CC>?<JJ|JJR|JJS>+}
               {<VBZ|VBG><NN|NNS><VBG>}
               {<VBN><JJR|JJS>?<RB|RBR|RBS>}
               {<VBG><DT|CD>?<NN|NNS><JJR|JJS>?<RB|RBR|RBS>}
               {<RB|RBR|RBS>*<CC>?<JJR|JJS>?<RB|RBR|RBS>+}
               {<TO>?<VB><DT|CD>?<NN|NNS>}
               {<NN|NNS>+<VBZ|VBP><VBN>}
               {<NN|NNS>*<JJR|JJS>?<RB|RBR|RBS>}
               {<NN|NNS><IN><DT|CD>?<NN|NNS>+}
